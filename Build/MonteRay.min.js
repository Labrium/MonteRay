/* MonteRay v1.0 alpha Copyright (c) 2021 Tech Labs, Inc. https://techlabsinc.github.io/MonteRay/LICENSE */
var MonteRay=MonteRay||{};MonteRay.PathtracingRenderer=function(l){this.VERSION="1.0 alpha",this.EPSILON=1e-5,l=l||{},console.log("Rendering provided by MonteRay v"+this.VERSION+" https://techlabsinc.github.io/MonteRay/LICENSE");var y;l.canvas?y=l.canvas:y=document.createElement("canvas");var p=y.getContext("2d",{alpha:l.alpha===!0}),R,I,C,z,S,Q=new THREE.Color(0);this.domElement=y,this.autoClear=!0,this.setClearColor=function(o){Q.set(o)},this.setPixelRatio=function(o){S=o,this.setSize(R*S,I*S)},this.setSize=function(o,m){R=Math.round(o/S),I=Math.round(m/S),C=R/2,z=I/2,y.style.width=o+"px",y.style.height=m+"px"},this.setSize(y.width,y.height),this.setPixelRatio(1),this.clear=function(){},l.BVHAcceleration&&l.BVHAcceleration==!1&&(THREE.BufferGeometry.prototype.computeBoundsTree=MeshBVHLib.computeBoundsTree,THREE.BufferGeometry.prototype.disposeBoundsTree=MeshBVHLib.disposeBoundsTree,THREE.Mesh.prototype.raycast=MeshBVHLib.acceleratedRaycast);function x(o,m){return Math.floor(Math.random()*(m-o+1))+o}var D=1;this.download=function(){var o=document.createElement("a");o.setAttribute("href",y.toDataURL()),o.setAttribute("download",document.title+"_"+D+".png"),D++,o.style.display="none",document.body.appendChild(o),o.onclick=function(m){m.stopPropagation()},o.click(),document.body.removeChild(o),l.nextFrame()};var b=1;this.render=function(o,m){cw=R,ch=I,chw=C,chh=z,y.width=cw,y.height=ch;var j=1,ee=Math.PI*2,w=new THREE.Color(0),a=new THREE.Raycaster;a.firstHitOnly=!0;for(var B=[],k=new THREE.Vector2(1/cw,1/ch),V=0;V<ch;V++)for(var L=0;L<cw;L++)B.push(new THREE.Vector2(L/cw*2-1,-(V/ch)*2+1));o.updateMatrixWorld(),m.updateMatrixWorld(),document.getElementById("sa").innerHTML="Analyzing scene...";var O=[];o.traverseVisible(function(e){try{l.BVHAcceleration&&l.BVHAcceleration==!1&&e instanceof THREE.Mesh&&e.geometry.computeBoundsTree(),w.equals(e.material.emissive)||O.push([e,new MeshSurfaceSampler(e).build()])}catch(i){}});var P=O.length;document.getElementById("sa").innerHTML="Pre-rendering...";for(var g=[],f=[],q=B.length,M=0;M<q;M++){var u=new THREE.Color(0),A=B[M];a.setFromCamera(A,m),intersect=a.intersectObjects(o.children,!0)[0];var J=1;if(intersect==null)u.add(o.background);else try{if(w.equals(intersect.object.material.emissive))intersect.object.material.isMeshBasicMaterial?u.copy(intersect.object.material.colors):(u.setScalar(intersect.distance/m.far),g.push([A,intersect,2,new THREE.Color(0),M*4]));else{var W=1;intersect.object.material.emissiveIntensity&&(W=intersect.object.material.emissiveIntensity),u.copy(intersect.object.material.color),u.multiply(intersect.object.material.emissive.clone().multiplyScalar(W))}}catch(e){u.setScalar(intersect.distance/m.far),g.push([A,intersect,2,new THREE.Color(0),M*4])}f.push(u.r*255),f.push(u.g*255),f.push(u.b*255),f.push(J*255)}var K=new ImageData(new Uint8ClampedArray(f),cw,ch);p.putImageData(K,0,0),g.sort(function(e,i){return e[1].distance-i[1].distance});function X(e){return e.face.normal.clone().applyMatrix3(new THREE.Matrix3().getNormalMatrix(e.object.matrixWorld)).normalize()}var v=!1;function s(e,i){var r;if(r=a.intersectObjects(o.children,!0)[0],r==null)return o.background;if(i>4&&(i>20||Math.random()>Math.max(r.object.material.color.r,Math.max(r.object.material.color.g,r.object.material.color.b))))return w;var n=X(r),c=w.clone();if(w.equals(r.object.material.emissive)){if(r.object.material.mirror||r.object.material.metalness==1)return a.ray.origin.copy(r.point),a.ray.direction.reflect(n),s([e[0],r,e[2],e[3],e[4]],i+1);if(r.object.material.glass)return v==!1?(a.ray.origin.copy(r.point.addScaledVector(n,-EPSILON)),a.ray.direction.lerp(n.clone().negate(),r.object.material.refractionRatio),v=!0,s([e[0],r,e[2],e[3],e[4]],i+1)):(a.ray.origin.copy(r.point.addScaledVector(n,EPSILON)),a.ray.direction.lerp(n,r.object.material.refractionRatio),v=!1,s([e[0],r,e[2],e[3],e[4]],i));var N=0,F=1;for(l.lightSamples&&(F=Math.floor(Math.random()*l.lightSamples));N<F;){var T=new THREE.Vector3,G=O[Math.floor(Math.random()*P)];if(G[1].sample(T),T.copy(G[0].localToWorld(T)),a.set(r.point.addScaledVector(n,1e-12),new THREE.Vector3().normalize()),a.ray.lookAt(T),l.advancedLighting)if(Math.random()>.5){var t=s([e[0],r,e[2],e[3],e[4]],i+1),h=n.dot(a.ray.direction);c.add(r.object.material.color.clone().multiply(t.clone().multiplyScalar(h)))}else{var t=a.intersectObjects(o.children,!0)[0],h=n.dot(a.ray.direction);if(l.recursiveLighting){if(t!=null){var d=1;t.object.material.emissiveIntensity&&(d=t.object.material.emissiveIntensity),c.add(t.object.material.color.clone().multiply(t.object.material.emissive.clone().multiplyScalar(d)))}else t.object.material.mirror||t.object.material.metalness==1?(a.ray.origin.copy(t.point),a.ray.direction.reflect(n),c.add(s([e[0],t,e[2],e[3],e[4]],i+1))):t.object.material.glass?v==!1?(a.ray.origin.copy(t.point.addScaledVector(n,-EPSILON)),a.ray.direction.lerp(n.clone().negate(),t.object.material.refractionRatio),v=!0,c.add(s([e[0],t,e[2],e[3],e[4]],i+1))):(a.ray.origin.copy(t.point.addScaledVector(n,EPSILON)),a.ray.direction.lerp(n,t.object.material.refractionRatio),v=!1,c.add(s([e[0],t,e[2],e[3],e[4]],i))):c.add(o.background);c.multiply(r.object.material.color)}else if(t!=null){var h=n.dot(a.ray.direction),d=1;t.object.material.emissiveIntensity&&(d=t.object.material.emissiveIntensity),c.add(r.object.material.color.clone().multiply(t.object.material.color.clone().multiply(t.object.material.emissive.clone().multiplyScalar(h).multiplyScalar(P).multiplyScalar(d))))}}else{var t=a.intersectObjects(o.children,!0)[0],h=n.dot(a.ray.direction);if(l.recursiveLighting){if(t!=null){var d=1;t.object.material.emissiveIntensity&&(d=t.object.material.emissiveIntensity),c.add(t.object.material.color.clone().multiply(t.object.material.emissive.clone().multiplyScalar(d)))}else t.object.material.mirror||t.object.material.metalness==1?(a.ray.origin.copy(t.point),a.ray.direction.reflect(n),c.add(s([e[0],t,e[2],e[3],e[4]],i+1))):t.object.material.glass?v==!1?(a.ray.origin.copy(t.point.addScaledVector(n,-EPSILON)),a.ray.direction.lerp(n.clone().negate(),t.object.material.refractionRatio),v=!0,c.add(s([e[0],t,e[2],e[3],e[4]],i+1))):(a.ray.origin.copy(t.point.addScaledVector(n,EPSILON)),a.ray.direction.lerp(n,t.object.material.refractionRatio),v=!1,c.add(s([e[0],t,e[2],e[3],e[4]],i))):c.add(o.background);c.multiply(r.object.material.color).multiplyScalar(n.dot(a.ray.direction))}else if(t!=null){var h=n.dot(a.ray.direction),d=1;t.object.material.emissiveIntensity&&(d=t.object.material.emissiveIntensity),c.add(r.object.material.color.clone().multiply(t.object.material.color.clone().multiply(t.object.material.emissive.clone().multiplyScalar(h).multiplyScalar(P).multiplyScalar(d))))}}N++}l.lightSamples&&c.multiplyScalar(1/(N+1)),_.lookAt(n);var Z=new THREE.Vector3(Math.random()-.5,Math.random()-.5,Math.random()*.5).applyQuaternion(_.quaternion);a.set(r.point,Z);var te=1/(2*Math.PI),h=n.dot(a.ray.direction),re=1/Math.PI,$=s([e[0],r,e[2],e[3],e[4]],i+1);return c.multiplyScalar(1).add(r.object.material.color.clone().multiply($).multiplyScalar(h*2))}else{var d=1;return r.object.material.emissiveIntensity&&(d=r.object.material.emissiveIntensity),r.object.material.color.clone().multiply(r.object.material.emissive.clone().multiplyScalar(d))}}var _=new THREE.Object3D,E=0;l.fps||(b=g.length,l.pixelBatchSize&&(b=l.pixelBatchSize));var H=0,Y=this;function U(){try{for(var e=0;e<b;e++){var i=g[E],r=g[E][2]-1;if(r<1&&(r=1),a.setFromCamera(new THREE.Vector2(i[0].x+(Math.random()-.5)*k.x,i[0].y+(Math.random()-.5)*k.y),m),i[3].multiplyScalar(r-1),i[3].add(s(i,0)),i[3].multiplyScalar(1/r),g[E][2]++,E++,f[i[4]]=i[3].r*255,f[i[4]+1]=i[3].g*255,f[i[4]+2]=i[3].b*255,f[i[4]+3]=255,E>=g.length){if(E=0,(l.maxSamples||l.downloadInterval)&&(j>=l.maxSamples||j%l.downloadInterval==0)){var n=new ImageData(new Uint8ClampedArray(f),cw,ch);if(p.putImageData(n,0,0),Y.download(),j>=l.maxSamples){document.getElementById("sa").innerHTML="Render Complete";return}}j++}}var n=new ImageData(new Uint8ClampedArray(f),cw,ch);if(p.putImageData(n,0,0),l.fps){var c=performance.now();c-H>1e3/l.fps?b-=10:c-H<1e3/l.fps&&(b+=100),b<1&&(b=1),document.getElementById("sa").innerHTML=cw+"x"+ch+"<br />"+j+"spp "+b+"ppf "+Math.round(1/((c-H)/1e3))+"fps",H=performance.now()}}catch(d){console.log(d)}setTimeout(U,0)}setTimeout(U,0)}};
